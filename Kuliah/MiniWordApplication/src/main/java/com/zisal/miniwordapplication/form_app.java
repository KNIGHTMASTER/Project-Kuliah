/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * form_app.java
 *
 * Created on Feb 20, 2011, 10:35:35 AM
 */

package com.zisal.miniwordapplication;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author FAUZI
 */
public class form_app extends javax.swing.JFrame {

    /** Creates new form form_app */
    public form_app() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtarea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        New = new javax.swing.JMenuItem();
        Open = new javax.swing.JMenuItem();
        Save = new javax.swing.JMenuItem();
        Close = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        Cut = new javax.swing.JMenuItem();
        Copy = new javax.swing.JMenuItem();
        Paste = new javax.swing.JMenuItem();
        About = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mini Word Application");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        txtarea.setColumns(20);
        txtarea.setRows(5);
        jScrollPane1.setViewportView(txtarea);

        getContentPane().add(jScrollPane1);

        file.setText("File");

        New.setText("New");
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });
        file.add(New);

        Open.setText("Open");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        file.add(Open);

        Save.setText("Save");
        file.add(Save);

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });
        file.add(Close);

        jMenuBar1.add(file);

        edit.setText("Edit");

        Cut.setText("Cut");
        edit.add(Cut);

        Copy.setText("Copy");
        edit.add(Copy);

        Paste.setText("Paste");
        edit.add(Paste);

        jMenuBar1.add(edit);

        About.setText("About");

        jMenuItem1.setText("Credits");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        About.add(jMenuItem1);

        jMenuBar1.add(About);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        // TODO add your handling code here:
        dispose();
        System.exit(0);
    }//GEN-LAST:event_CloseActionPerformed

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed
        // TODO add your handling code here:
        int option=JOptionPane.showConfirmDialog(null, "Do you want to save current file ?","",JOptionPane.YES_NO_OPTION);
        if(option==JOptionPane.YES_OPTION){
            JFileChooser simpan=new JFileChooser();
            int pilihan=simpan.showSaveDialog(this);
            if(pilihan==JFileChooser.APPROVE_OPTION){
                try{
                    BufferedWriter x=new BufferedWriter (new FileWriter(simpan.getSelectedFile().getPath()));
                    x.write(txtarea.getText());
                    x.close();
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane, "Error in Writing File");
                }
            }
        }
 else if(option==JOptionPane.NO_OPTION){
     txtarea.setText("");
 }
 else if(option==JOptionPane.CANCEL_OPTION){
     System.exit(0);
 }
    }//GEN-LAST:event_NewActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        // TODO add your handling code here:
        FileReader baca=null;
        String namafile;
        String hasil="";
        JFileChooser buka =new JFileChooser();
        int pilihan=buka.showOpenDialog(this);
        if(pilihan==JFileChooser.APPROVE_OPTION){
            String cetak="";
                try{
                namafile=buka.getSelectedFile().getPath();
                JOptionPane.showMessageDialog(rootPane, "nama file = "+namafile);
                baca=new FileReader(namafile);
                BufferedReader x=new BufferedReader(baca);
                do{
                    hasil=x.readLine();
                    System.out.println(hasil);
                    cetak+=hasil+"\n";
                }
                while(hasil!=null);
                txtarea.setText(cetak);
            }
            catch(FileNotFoundException e){
                JOptionPane.showMessageDialog(rootPane, "file is not found error");
            }
            catch(IOException e){
                JOptionPane.showMessageDialog(null, "Error","",JOptionPane.ERROR_MESSAGE);
            }
            finally{
                try{
                    if(baca!=null){
                        baca.close();
                    }
                }
                catch(IOException e){
                    JOptionPane.showInternalConfirmDialog(rootPane, "System error");
                }
            }
        }
    }//GEN-LAST:event_OpenActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        about tentang =new about();
        tentang.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form_app().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu About;
    private javax.swing.JMenuItem Close;
    private javax.swing.JMenuItem Copy;
    private javax.swing.JMenuItem Cut;
    private javax.swing.JMenuItem New;
    private javax.swing.JMenuItem Open;
    private javax.swing.JMenuItem Paste;
    private javax.swing.JMenuItem Save;
    private javax.swing.JMenu edit;
    private javax.swing.JMenu file;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtarea;
    // End of variables declaration//GEN-END:variables

}
